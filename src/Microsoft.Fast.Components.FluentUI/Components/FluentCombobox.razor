@inherits FluentInputBase<string?>
<fluent-combobox value="@BindConverter.FormatValue(CurrentValue)"
                 @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                 appearance="@Appearance.ToAttributeValue()"
                 disabled="@Disabled"
                 required="@Required"
                 autocomplete="@Autocomplete.ToAttributeValue()"
                 @attributes="AdditionalAttributes">
    @ChildContent
</fluent-combobox>
@code
{
    [Parameter]
    public Appearance? Appearance { get; set; }

    [Parameter]
    public bool? Disabled { get; set; }

    [Parameter]
    public bool? Required { get; set; }

    [Parameter]
    public Autocomplete? Autocomplete { get; set; }

    [Parameter]
    public Position? Position { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override bool TryParseValueFromString(string? value, out string? result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}